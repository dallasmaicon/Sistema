unit mControllerPagar_U;

interface

uses
  System.SysUtils;

type
  TnClassPagar = record
    Codigo: Integer;
    Titulo: String;
    Fornecedor: String;
    Venciomento: TDate;
    Observacao: string;
    Valor: currency;
  end;

  TControlllerPagar = class
    private
      FPagar: TnClassPagar;
      FParam: string;

      procedure GetParam;
      procedure ValidarDados;
    procedure ValidarFornecedor;
    public
      constructor Create(_AProduto: TnClassPagar);
      function GetValue: string;

      property Param: string read FParam;
  end;

implementation

uses
  Vcl.Dialogs, mControllerConexao_U, Data.DB;

{ TControlllerCliente }

constructor TControlllerPagar.Create(_AProduto: TnClassPagar);
begin
  FPagar := _AProduto;
  GetParam;;
end;

procedure TControlllerPagar.ValidarDados;
begin
  if FPagar.Titulo = '' then
    raise Exception.Create('Erro: Título de Conta a Pagar não informado.');

  if FPagar.Venciomento <= 0 then
    raise Exception.Create('Erro: Vencimento informado é inválido');

  if FPagar.Fornecedor = '' then
    raise Exception.Create('Erro: Fornecedor não infromado.')
  else
  begin
    ValidarFornecedor;
  end;

end;

procedure TControlllerPagar.ValidarFornecedor;
var
  AController: iController;
  DataSource: TDataSource;
begin
  DataSource := TDataSource.Create(nil);
  try

  finally

  end;
    AController
      .Entidades
        .Pagar
          .DataSet(DataSource1)
        .ExecSQL(ACadastroPagar.Param, ACadastroPagar.GetValue);
end;

procedure TControlllerPagar.GetParam;
begin
  FParam := 'CODIGO';
  if FPagar.Titulo <> '' then
    FParam := FParam + ', TITULO';
  if FPagar.Venciomento > 0 then
    FParam := FParam + ', DATAVENCIMENTO';
  if FPagar.Fornecedor <> '' then
    FParam := FParam + ', CODIGOFORNECEDOR';
  FParam := FParam + ', VALOR, OBSERVACAO, DATACADASTRO';
end;

function TControlllerPagar.GetValue: string;
begin
  ValidarDados;

  Result := '';
  Result := '(select coalesce(max(CODIGO), 0) + 1 AS TOTAL FROM CONTASPAGAR)';
  if FPagar.Titulo <> '' then
    Result := Result + ', ''' + FPagar.Titulo + '''';
  if FPagar.Venciomento > 0 then
    Result := Result + ', ''' + FormatDateTime('mm-dd-yyyy', FPagar.Venciomento) + '''';
  if FPagar.Fornecedor <> '' then
    Result := Result + ', ' + FPagar.Fornecedor;
  Result := Result + ', ' + CurrToStr(FPagar.Valor);
  Result := Result + ', ''' + FPagar.Observacao + '''';
  Result := Result + ', ''' + FormatDateTime('mm-dd-yyyy', Now) + '''';
  ShowMessage(FParam);
  ShowMessage(Result);
end;

end.
